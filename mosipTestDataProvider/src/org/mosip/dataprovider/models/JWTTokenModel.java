package org.mosip.dataprovider.models;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.Data;

import java.util.Map;

import org.json.JSONObject;
@Data
public class JWTTokenModel {

	//Map<String, Object> jsonHeader; // = new HashMap<String, Object>();
	JSONObject jwtPayload;
	JSONObject jwtSign;
	JSONObject jwtHeader;
	
	public JWTTokenModel(String jwtToken) {
		 java.util.Base64.Decoder decoder = java.util.Base64.getUrlDecoder();
         String[] parts = jwtToken.split("\\."); // split out the "parts" (header, payload and signature)

         String headerJson = new String(decoder.decode(parts[0]));
         String payloadJson = new String(decoder.decode(parts[1]));
         jwtPayload = new JSONObject(payloadJson);
         //String signatureJson = new String(decoder.decode(parts[2]));
         jwtHeader = new JSONObject(headerJson);
      //   jwtSign = new JSONObject(signatureJson);
        // JWTTokenHeader(headerJson);
	}
	

	 @Override
	 public String toString() {
	      return org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(this);
	  }
	 
	 public static void main(String[] args) {
		 String jwtToken = "eyJ4NWMiOlsiTUlJRGtEQ0NBbmlnQXdJQkFnSUVYM1hNRHpBTkJna3Foa2lHOXcwQkFRc0ZBRENCaVRFTE1Ba0dBMVVFQmhNQ1NVNHhFakFRQmdOVkJBZ01DV3RoY201aGRHRnJZVEVZTUJZR0ExVUVCd3dQYlc5emFYQm1hVzVuWlhKemJHRndNUmd3RmdZRFZRUUtEQTl0YjNOcGNHWnBibWRsY25Oc1lYQXhHREFXQmdOVkJBc01EMjF2YzJsd1ptbHVaMlZ5YzJ4aGNERVlNQllHQTFVRUF3d1BiVzl6YVhCbWFXNW5aWEp6YkdGd01CNFhEVEl3TVRBd01URXlNekV4TVZvWERUSXhNVEF3TVRFeU16RXhNVm93Z1lreEN6QUpCZ05WQkFZVEFrbE9NUkl3RUFZRFZRUUlEQWxyWVhKdVlYUmhhMkV4R0RBV0JnTlZCQWNNRDIxdmMybHdabWx1WjJWeWMyeGhjREVZTUJZR0ExVUVDZ3dQYlc5emFYQm1hVzVuWlhKemJHRndNUmd3RmdZRFZRUUxEQTl0YjNOcGNHWnBibWRsY25Oc1lYQXhHREFXQmdOVkJBTU1EMjF2YzJsd1ptbHVaMlZ5YzJ4aGNEQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxCWjBTTkMyWlk1RnV4MUhhZDBxRTE0ZXV6T0ZzWm1GQk5vMUo2cDM5WXhQSFNISVcxY0tNS0Y0M0NCazVJa1MxN1c4YVh1QnhzN1JYL3lER2tWb09xNWYrKzhWT0puVFk0SE9sM01yTVNJUjBJeVhhcXpHTWw5cUlTbSs1MGFSODZxQXNackFYdVpKQmdKendHWnJLbzlTN3ducUEyd3FLbFhUekNjakNJOFkwQ2huM1I2YlpCY2JNMTVMTUg4MHpDa2JOZXRxL0RXYTJEYUViS24ySVZ0R2pnWFJnMFZzU04wUnpFRnhwZTVwQTNCY2ozakYybjVubW5DVmNxN0dpRldZQjc5aCtDQVZGK256ZWZ5L3NJNUdoeXN2M0V1T1M2V0QrZ3pVWitId3M3akMrQlRBTS91d0VmQTIrSUtWNk5HdnRudkdFTHJISHNldTlqME1Pc0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUt3bHZ1ZTBHUEZqSjl4aWcyZVIyeVpJcnRlaldOQW1Wem4xcmg0VEtleEdxY2xDQnk0U1JTcXJrNEtZZnlMWStic1VkeHNDTkhHVUhrNXFzVkRlUWpWd3NPNVR4OXBRdWZIRjVlYkV2VE44TVVDd2FpY3Q2eGFLYURJaWlNYXVNMU1wRnorM2EyVVZlRnBzaWRCdFp3TmQzL3FNd3loa2VFUU5uTVJsaTF6Rk1JZFkxWFdTRXhFZVRLSm11NXZjaVhxb1YyeitIZjdNNXlPNm04eDB1NnF4Q0YwVURaaGJZcTFBdG9oYjJMTEY0M1RubFEvNTNwTXRtNHV5Yjd6b0poaXBBRnpJWTQwZFhsNUZRd0ZwdkVTMTkyVkJDUTJHaFB3cXNQOExSTytTUmlOeUtUa0l5TVNUczNvTVF6WGNrVWhlU2hkQ2dic21VbUhBV0FxSWNPUT09Il0sImFsZyI6IlJTMjU2In0..brdRnAT5hUH5MFlT8koRCM3aEtbrwmIgsDS4ON5yCmMcKGX9XwHSvaO5jlIh_AYyawiq8YlMPDZqAAjuusm5kv7AzQIBlsyWR86KYvgCc14uHcm1XwnnL3CIkWNPa7wTeaaHJkywSrjfTkFwa77oLzQUb3UH0UTVK5ZnFJfH0VZlZWfeXXJ1Cf9FPsd3kf9xYpaw02_PFgI-C4lwWb1RkDn-CZhiAc292hq3u63JYGNL9cqrRQm2AJzgDqPUzHg_CnJYOChHtD2VRKkERB3QzjSZ-RiFr00rHHO06uNHjmMblpzOSbKpU9KjqA2QDrYiuK2vunSIu-UcA5IyLVJ2zA";
		 JWTTokenModel model = new JWTTokenModel(jwtToken);
		 System.out.println(model.toString());
	 }
}
